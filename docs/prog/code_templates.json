{
    "tDefaultAppPath": "app_LSAC/",
    "tTplHTML": "<html>\n    <head>\n      <title>App LSAC</title>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no\">\n      <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n      <link href=\"css/jquery.mobile-1.2.0.min.css\" rel=\"stylesheet\" />\n      <link href=\"css/ios_inspired.css\" rel=\"stylesheet\" />\n\n___LIBRARIES___\n\n      <script>\n        //------------BEGIN iOS-Inspired------------\n         // all dialog buttons should close their parent dialog\n         $(\".ui-dialog button\").live(\"click\", function() {\n           $(\"[data-role='dialog']\").dialog(\"close\");\n          });\n          $(document).on(\"mobileinit\", function(){\n             $.mobile.defaultPageTransition = \"slide\";\n           });\n         //--------------END iOS-Inspired------------\n      </script>\n      <script>\n         //-----INIT DisApp -----\n          var vDebug = 0;\n          var vApp = new App();\n       </script>\n       <script src=\"js/jquery.mobile-1.2.0.min.js\"></script>\n       <link href=\"css/ios_post.css\" rel=\"stylesheet\" />\n     </head>\n    <body>\n\n<!--\n=============================================\n         BEGIN OF PAGES\n=============================================\n-->\n\n___PAGES___\n\n<!--\n=============================================\n     END OF PAGES / BEGIN iFRAME JSCALL\n=============================================\n -->\n    <div id=\"divJSCALL\"></div>\n    <div id=\"iFrameContainer\" style=\"display:none\">\n      <iframe id=\"iLoader\" src=\"loader/setonline.html\" width=\"90%\" height=\"100\" name=\"iLoader\"></iframe>\n    </div>\n<!--\n=============================================\n         END OF iFRAME JSCALL\n=============================================\n -->\n    <script type=\"text/javascript\">\n       var vQueryHash = readQueryParams();\n       var vOnlineMode = false;\n       var vApp = new App();\n       vApp.init(document,vQueryHash);\n       checkOnlineMode();\n      </script>\n    </body>\n</html>\n  ",
    "tTplSCRIPT": "      <script type=\"text/javascript\" src=\"___LIBRARY___\"></script>\n",
    "tTplPAGE": "     <!-- Page: ___PAGE_ID___     Page Type: ___PAGE_TYPE_ID___ -->\n     <div data-role=\"page\" id=\"___PAGE_ID___\">\n         <div data-role=\"header\" data-position=\"fixed\">\n           ___HEADER_BUTTON1___\n            <h1>___PAGE_TITLE___</h1>\n           ___HEADER_BUTTON2___\n       </div>\n         <!-- /header -->\n       <div data-role=\"content\">\n          ___PAGE_CONTENT___\n       </div>\n    <!-- /page ID: ___PAGE_ID___ -->\n    </div>\n",
    "tTplBUTTON": "       <!-- header button: '___BUTTON_TEXT___' -->\n       <a href=\"#\" id=\"b___BUTTON_ID______COUNTER___\" onclick=\"$.mobile.changePage( '#___LINK_PAGE_ID___', { transition: 'slideup', changeHash: false });return false\" data-theme=\"a\">___BUTTON_TEXT___</a>\n",
    "tDefaultBUTTON": "       <!-- header button: '___BUTTON_TEXT___' -->\n       <a href=\"#\" class=\"b____BUTTON_ID___\" id=\"b____BUTTON_ID______COUNTER___\" onclick=\"alert('Click Button ___PAGE_ID___');return false\" data-theme=\"a\">___BUTTON_TEXT___</a>\n",
    "tTplQUIT": "       <a href=\"#\" class=\"b____BUTTON_ID___\" id=\"b____BUTTON_ID______COUNTER___\" onclick=\"if (quitApp()) window.close();\" data-theme=\"c\">Quit</a>\n",
    "tHeader": "//#################################################################\n//# Javascript Class: ___CLASSNAME___()\n//#       SuperClass: ___SUPERCLASSNAME___\n//#   Class Filename: ___CLASSFILENAME___\n//#\n//# Author of Class:      ___AUTHOR___\n//# email:                ___EMAIL___\n//# created               ___DATE___\n//# last modifications    ___DATE___\n//# GNU Public License V3 - OpenSource\n//#\n//# created with JavaScript Class Generator by Engelbert Niehaus\n//#     https://niebert.github.io/JavascriptClassGenerator\n//#################################################################\n\n//---------------------------------------------------------------------\n//---Store File in Subdirectory /js and import this Class in HTML-File with\n// <SCRIPT LANGUAGE=\"JavaScript\" SRC=\"js/___CLASSFILENAME___\"> </SCRIPT>\n//---------------------------------------------------------------------\n//---Constructor of Class ___CLASSNAME___()\n// Call the constructor for creating an instance of class ___CLASSNAME___\n// by the following command in HTML-file that imports this class\n// var vMyInstance = new ___CLASSNAME___();\n//---------------------------------------------------------------------\n//----Attributes-------------------------------------------------------\n//---------------------------------------------------------------------\n// If you want to access the attributes of ___CLASSNAME___, use\n// the attribute name with a leading \"this.\" in the definition of method of ___CLASSNAME___, e.g.\n// this.aName = \"Hello World\";\n//---------------------------------------------------------------------\n//----Methods----------------------------------------------------------\n//---------------------------------------------------------------------\n// (1) If you want to assign definitions of methods for single instance of the class '___CLASSNAME___'\n// they are defined with\n//    this.my_method = function (pPar1,pPar2)\n// this approach allows to overwrite the method definition of single instances dynamically.\n//---------------------------------------------------------------------\n// (2) A prototype definition of methods for '___CLASSNAME___' will be set by\n// use the method's name and extend it with '____CLASSNAME___'.\n//    ____CLASSNAME___.prototype.my_method = function (pPar1,pPar2)\n// This approach consumes less memory for instances.\n//---------------------------------------------------------------------\n\n___SUPERCLASSPROTOTYPE___\n\nfunction ___CLASSNAME___ () {\n___SUPERCLASS___\n    //---------------------------------------------------------------------\n    //---Attributes of Class \"___CLASSNAME___()\"\n    //---------------------------------------------------------------------\n___ATTRIBUTES___\n\n___METHODS___\n\n    //---------------------------------------------------------------------\n    //---END Constructor of Class \"___CLASSNAME___()\"\n    //---------------------------------------------------------------------\n}\n\n___METHODSPROTOTYPE___\n    ",
    "tMethodsHeaderTpl": "\n//---------------------------------------------------------------------\n//---Methods of Class \"___CLASSNAME___()\" defined as JS functions\n//---------------------------------------------------------------------\n",
    "tSuperClassProto": "//--------------------------------------\n//---Super Class------------------------\n// Inheritance: '___CLASSNAME___' inherits from '___SUPERCLASSNAME___'\n___CLASSNAME___.prototype = new ___SUPERCLASSNAME___();\n// Constructor for instances of ___CLASSNAME___ has to updated.\n// Otherwise constructor of ___SUPERCLASSNAME___ is called\n___CLASSNAME___.prototype.constructor=___CLASSNAME___;\n// see http://phrogz.net/js/classes/OOPinJS2.html for explanation\n//--------------------------------------\n",
    "tSuperClass": "\n    //--------------------------------------\n    //---Super Class------------------------\n    this.SuperClass = ___SUPERCLASSNAME___;\n    this.SuperClass();\n    //--------------------------------------\n  ",
    "tClassTail": "\n//-------------------------------------------\n//---End Definition of Class-----------------\n// JS Class: ___CLASSNAME___\n//-------------------------------------------\n",
    "tMethodHeader": "\n//#################################################################\n//# Method: ___METHODNAME___()\n//#    used in Class: ___CLASSNAME___\n//# Parameter:\n//#    ___PARAMETERDEF___\n//# Comment:\n//#    ___METHODCOMMENT___\n//# ___RETURNCOMMENT___\n//# created               ___DATE___\n//# last modifications    ___DATE___\n//#################################################################\n\n___METHODDEFPREFIX___.___METHODNAME___ = function (___METHODPARAMETERS___) {\n  //----Debugging------------------------------------------\n  // The following alert-Command is useful for debugging\n  //alert(\"___CLASSFILENAME___ - Call: ___METHODDEF___\")\n  //----Create Object/Instance of ___CLASSNAME___----\n  //    var vMyInstance = new ___CLASSNAME___();\n  //    vMyInstance.___METHODCALL___;\n  //-------------------------------------------------------\n\n___METHODCODE___\n\n};\n//----End of Method ___METHODNAME___ Definition\n\n",
    "tMethodPrefix": "this.",
    "tMethodPrefixProto": "___CLASSNAME___.prototype.",
    "tTplLoopArray": "    for (var i = 0; i < ___LOOPARRAY___.length; i++) {\n      ___LOOPARRAY___[i].___LOOPMETHOD___;\n    };\n  ",
    "tTplLoopHash": "    for (vKey in ___LOOPARRAY___) {\n      ___LOOPARRAY___[vKey].___LOOPMETHOD___;\n    };\n  ",
    "tCommentPrefix": "//",
    "tCommentBoxPrefix": "#",
    "mod_date": "2017/03/06 9:45:47"
}
